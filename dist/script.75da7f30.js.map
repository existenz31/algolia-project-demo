{"version":3,"sources":["script.js"],"names":["APPLICATION_ID","API_KEY_SEARCH","RESTAURANTS_INDEX","algolia","algoliasearch","helper","algoliasearchHelper","disjunctiveFacets","hitsPerPage","maxValuesPerFacet","getRankingInfo","userLocation","successCallback","position","console","log","loc","coords","setQueryParameter","latitude","longitude","search","errorCallback","error","navigator","geolocation","getCurrentPosition","on","searchCallback","$inputfield","$","$hits","$hitsFound","$foodTypesFacet","$paymentOptionsFacet","$buttonShowMore","showMoreInProgress","handleFacetClick","handleShowMoreClick","keyup","e","setQuery","val","content","hits","length","empty","html","renderHits","renderFacets","results","hitsFound","nbHits","processingTimeMS","item","url","image_url","replace","name","stars_count","toFixed","reviews_count","food_type","neighborhood","price_range","foodTypesFacet","data","getFacetValues","isRefined","count","paymentOptionsFacet","data2","preventDefault","target","attribute","dataset","value","toggleRefine","nextPage"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["// Algolia client. Mandatory to instantiate the Helper.\n\n// These secret should be hidden\nconst APPLICATION_ID = 'T6YWIILD53';\nconst API_KEY_SEARCH = 'fd5a18d06a2881e28b3fc3e02ffec21a';\nconst RESTAURANTS_INDEX = 'restaurants_demo';\n\n\nvar algolia = algoliasearch(APPLICATION_ID, API_KEY_SEARCH);\n\n// Algolia Helper\nvar helper = algoliasearchHelper(algolia, RESTAURANTS_INDEX, {\n  disjunctiveFacets: ['payment_options', 'food_types'],\n  hitsPerPage: 5,\n  maxValuesPerFacet: 7,\n  getRankingInfo: true\n});\n\nvar userLocation = null;\n\nconst successCallback = (position) => {\n  console.log(position);\n  loc = position.coords;\n  helper.setQueryParameter('aroundLatLng', `${loc.latitude}, ${loc.longitude}`);\n  helper.search();\n};\n\nconst errorCallback = (error) => {\n  console.log(error);\n  helper.setQueryParameter('aroundLatLngViaIP', true);\n  helper.search();\n};\n\nnavigator.geolocation.getCurrentPosition(successCallback, errorCallback);\n\n\n// Bind the result event to a function that will update the results\nhelper.on(\"result\", searchCallback);\n\n// The different parts of the UI that we want to use in this example\nvar $inputfield = $(\"#search-box\");\nvar $hits = $('#hits');\nvar $hitsFound = $('#hits-found');\nvar $foodTypesFacet = $('#food-types-facet');\nvar $paymentOptionsFacet = $('#payment-options-facet');\nvar $buttonShowMore = $('#button-show-more');\n\nvar showMoreInProgress = false;\n\n$foodTypesFacet.on('click', handleFacetClick);\n$paymentOptionsFacet.on('click', handleFacetClick);\n$buttonShowMore.on('click', handleShowMoreClick);\n\n// When there is a new character input:\n// - update the query\n// - trigger the search\n$inputfield.keyup(function(e) {\n  helper.setQuery($inputfield.val()).search();\n});\n\n// Result event callback\nfunction searchCallback(content) {\n  if (content.hits.length === 0) {\n    // If there is no result we display a friendly message\n    // instead of an empty page.\n    $hits.empty().html(\"No results :(\");\n    return;\n  }\n\n\t// Hits/results rendering\n    renderHits($hits, content);\n    renderFacets($foodTypesFacet, $paymentOptionsFacet, content);\n}\n\nfunction renderHits($hits, results) {\n    // Scan all hits and display them\n    const hitsFound = `${results.nbHits} result(s) found&nbsp;<span>in ${results.processingTimeMS / 1000} second(s)</span>`\n    $hitsFound.html(hitsFound);\n  \n    let hits = '';\n    for (const item of results.hits) {\n        let url = item.image_url;\n        // Little trick => use unsplash random restaurant pictures\n        url = url.replace('www.opentable.com/img/restimages/', 'source.unsplash.com/random/200x200?restaurant=');\n        hits += '<div class=\"row hit-item\">' + \n        '    <div class=\"col-2 hit-img\">' + \n        `    <img src=\"${url}\">` + \n        '    </div>' + \n        '    <div class=\"col-10\">' + \n        '    <ul class=\"list-group list-card\">' + \n        '        <li class=\"list-group-item\">' + \n        `        <div class=\"hit-name\">${item.name}</div>` + \n        '        <div class=\"hit-rating-inline\">' + \n        `            <div class=\"hit-rating-score\">${item.stars_count.toFixed(1)}</div>` + \n        '            <div class=\"rating hit-rating-star\">' + \n        `            <div class=\"rating-bg\" style=\"width: calc(${item.stars_count}/5*100%); \"></div>` + \n        '            <svg><use xlink:href=\"#fivestars\" /></svg>' + \n        '            </div>' + \n        `            <div class=\"hit-reviews\">&nbsp;(${item.reviews_count} reviews)</div>` + \n        '        </div>' + \n        `        <div class=\"hit-desc\">${item.food_type} | ${item.neighborhood} | ${item.price_range}</div>` + \n        '        </li>' + \n        '    </ul>' + \n        '    </div>' + \n        '</div>';\n    \n    }\n  if (showMoreInProgress) {\n    // Append Mode\n    hits = $hits.html() + hits;\n    showMoreInProgress = false\n  }\n  $hits.html(hits);\n\n}\n\nfunction renderFacets($foodTypesFacet, $paymentOptionsFacet, results) {\n    // We use the disjunctive facets attribute.\n\n    let foodTypesFacet = '';\n    const data = results.getFacetValues('food_types');\n    for (const item of data) {\n        foodTypesFacet +=    '' +\n        `    <li class=\"list-group-item filter-inline ${item.isRefined?'active':''}\">` +\n        `      <div class=\"col-9\" data-attribute=\"food_types\" data-value=\"${item.name}\">${item.name}</div><div class=\"col-3 facet-values\">${item.count}</div>` +\n        '    </li>';\n    }   \n    $foodTypesFacet.html(foodTypesFacet);\n\n    let paymentOptionsFacet = '';\n    const data2 = results.getFacetValues('payment_options');\n    for (const item of data2) {\n        paymentOptionsFacet +=    '' +\n        `    <li class=\"list-group-item filter-inline ${item.isRefined?'active':''}\">` +\n        `      <div class=\"col-10\" data-attribute=\"payment_options\" data-value=\"${item.name}\">${item.name}</div>` +\n        '    </li>';\n        \n    }   \n    $paymentOptionsFacet.html(paymentOptionsFacet);\n\n}\n  \n\nfunction handleFacetClick(e) {\n    e.preventDefault();\n    var target = e.target;\n    var attribute = target.dataset.attribute;\n    var value = target.dataset.value;\n    // Because we are listening in the parent, the user might click where there is no data\n    if(!attribute || !value) return;\n    // The toggleRefine method works for disjunctive facets as well\n    helper.toggleRefine(attribute, value).search();\n}\n\nfunction handleShowMoreClick(e) {\n    showMoreInProgress = true; // Append mode (quick and dirty)\n    helper.nextPage().search();\n}"]}